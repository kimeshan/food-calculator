// Prisma schema file, docs: https://pris.ly/d/prisma-schema

// Congfiguration
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum BioSex {
  MALE
  FEMALE
}

enum NutrientCategory {
  MACRONUTRIENT
  MICRONUTRIENT
  VITAMIN
  MINERAL
}

enum VitaminSolubility {
  FAT
  WATER
}

enum FoodSource {
  USDA
}

enum FoodNutrientSource {
  USDA
}

enum DerivationMethodology {
  ANALYTICAL
  CALCULATED
}

// Models
model Nutrient {
  id                   Int                   @id @default(autoincrement())
  name                 String                @unique
  commonName           String?               @unique
  description          String
  category             NutrientCategory
  solubility           VitaminSolubility?
  // Relations
  FoodNutrient         FoodNutrient[]
  // To add in future versions
  // Deficiency disease(s)
  // Overdose syndrome/symptoms
  // Functions
  NutrientRequirements NutrientRequirement[]
}

model NutrientRequirement {
  id            Int      @id @default(autoincrement())
  standardName  String
  source        String
  sourceURL     String
  yearFrom      Int
  ageGroupStart Int?
  ageGroupEnd   Int?
  biologicalSex BioSex?
  amountMicroMg Float
  // Relations
  nutrient      Nutrient @relation(fields: [nutrientId], references: [id])
  nutrientId    Int

  @@unique([standardName, yearFrom, nutrientId, biologicalSex])
}

model Food {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  numberOfGrams Int
  source        FoodSource
  nutrients     FoodNutrient[]
}

model FoodNutrient {
  id                    Int                   @id @default(autoincrement())
  amountMicroMg         Float
  createdAt             DateTime              @default(now())
  derivationMethodology DerivationMethodology
  source                FoodNutrientSource
  sourceUrl             String
  // Relation
  food                  Food                  @relation(fields: [foodId], references: [id])
  foodId                Int
  nutrient              Nutrient              @relation(fields: [nutrientId], references: [id])
  nutrientId            Int

  @@unique([foodId, nutrientId, source])
}
